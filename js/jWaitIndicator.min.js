/*
 *JWaitIndicator 1.0 - WaitIndicator for Lazy loading
 * 
 * http://hackme.co.vu
 *
 * Copyright (c) 2014 Rajeev Ranjan
 *
 * licensed under the MIT:
 *   http://www.opensource.org/licenses/mit-license.php
 *
 */

!function (t, i, o, a) { var n = 0; t.fn.jWaitIndicatorStart = function (o) { function d(i) { t('._WaitIndicator[WaitIndicatorAssociatedWith="' + i.attr("id") + '"]').css({ display: r.display, position: i.is("body") ? "fixed" : r.position, "z-index": r.zindex, top: i.is("body") ? 0 : i.offset().top + 15, left: i.is("body") ? 0 : i.offset().left + 7, height: i.is("body") ? "100%" : i.height() - 10, width: i.is("body") ? "100%" : i.width() - 10, "background-image": r.waitIndicatorImage, "background-color": r.backgroundColor, "background-position-x": r.backgroundPosX, "background-position-y": r.backgroundPosY, "background-repeat": r.backgroundRepeat }).show() } var r = t.extend({ display: "none", position: "absolute", zindex: "99999999", top: "0", left: "0", height: "100%", width: "100%", backgroundColor: "rgba( 255, 255, 255, .8 )", waitIndicatorImage: "url('../Images/pg.gif')", backgroundRepeat: "no-repeat", backgroundPosX: "50%", backgroundPosY: "50%" }, o); this.each(function () { var o = t(this); o.attr("id") == a && o.attr("id", "_WaitIndicator" + n), 0 == t('._WaitIndicator[WaitIndicatorAssociatedWith="' + t(this).attr("id") + '"]').length && t("body").append("<div class='_WaitIndicator' WaitIndicatorAssociatedWith='" + t(this).attr("id") + "' ></div>"), d(o), t(i).resize(function () { d(o) }), n++ }) }, t.fn.jWaitIndicatorEnd = function () { this.each(function () { t('._WaitIndicator[WaitIndicatorAssociatedWith="' + t(this).attr("id") + '"]').hide() }) }, t.fn.jWaitIndicatorDestroy = function () { this.each(function () { t('._WaitIndicator[WaitIndicatorAssociatedWith="' + t(this).attr("id") + '"]').remove() }) }, t.fn.jWaitIndicatorDestroyAll = function () { t("._WaitIndicator").remove() } }(jQuery, window, document);

